  <div class="center">
  <p>大会名</p>
  <p><%= @group.group_name %></p>
  </div>


  <div class="center">
  <p>現時刻</p>
      <h1 id="time"></h1>
      <script>
      time();
      function time(){
          var now = new Date();
          document.getElementById("time").innerHTML = now.toLocaleTimeString();
      }
      setInterval('time()',1000);
      </script>

  <p>大会残り時間</p>
  <span class="countdown" data-date="<%= @time.end_time %>"></span>

    <script>
    window.addEventListener('load',()=>{
      Countdown();
    })

    const Countdown = function(){
      const cd_areas = document.getElementsByClassName('countdown');
      [...cd_areas].forEach(cd_area=>{
        const target_unix = new Date(cd_area.dataset.date)/1000;
        setInterval(()=>{
          const now_unix = Math.floor(new Date()/1000);
          let sec = target_unix-now_unix;
          let cd_text = '';
          if (sec == 0) {
            alert('終了です!');
            // window.location.href = '/groups'
            return false;
          }
          if(sec>=86400){
            cd_text += Math.floor(sec/86400)+'日';
            sec = sec%86400;
          }
          if(sec>=3600){
            cd_text += td(Math.floor(sec/3600))+'時間';
            sec = sec%3600;
          }else{
            cd_text += '00時間';
          }
          if(sec>=60){
            cd_text += td(Math.floor(sec/60))+'分';
            sec = sec%60;
          }else{
            cd_text += '00分';
          }

          cd_text += td(sec)+'秒';
          cd_area.textContent = cd_text;
        },1000);
      });

      function td(x){
        if(x<10){
          return '0'+x;
        }else{
          return x;
        }
      }
    }
    </script>
  </div>


<div class="image_modal">
  <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#sampleModal">
    画像を投稿する
  </button>

  <!-- モーダル・ダイアログ -->
  <div class="modal fade" id="sampleModal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal"><span>×</span></button>
          <h4 class="modal-title">画像投稿</h4>
        </div>
        <div class="modal-body">
          <%= form_for(@p) do |f| %>
          <%= f.label :fish_image %>
          <%= f.file_field :fish_image %>
          <p>魚種</p>
          <%= f.text_field :fish_name, autofocus: true, placeholder:"魚種"%>
          <p>数</p>
          <%= f.text_field :count, autofocus: true %>
          <p>大きさ</p>
          <%= f.text_field :size, autofocus: true %><br>
          <%= f.submit "投稿する", class: "btn btn-info" %>
          <% end %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">閉じる</button>
          <button type="button" class="btn btn-primary">ボタン</button>
        </div>
      </div>
    </div>
  </div>
</div>


<%=ENV['Maps_JavaScript_API']%>

<!-- 地名入力用のinputを追加 -->
<input id="address" type="textbox" value="DMM WEBCAMP 難波">

<!-- buttonをクリックしたらcodeAddressを実行　-->
<input type="button" value="Encode" onclick="codeAddress()">
<div id='map'>
</div>

<style>
#map{
  height: 600px;
}
</style>


<script>
/*
mapを関数の外で定義(codeAddressでも使うため)
geocoderを用意
*/

let map
let geocoder

var marker = [];

var center = [
<% @photos.each do |photos| %>
{
  lat: <%= photos.latitude %>, // 緯度
  lng: <%= photos.longitude %> // 経度
  },
<% end %>
];

function initMap(){
  // geocoderを初期化
  geocoder = new google.maps.Geocoder()

  map = new google.maps.Map(document.getElementById('map'), {
  center: center[0], // 地図の中心を指定
  zoom: 14
  });


// マーカー毎の処理
for (var i = 0; i < center.length; i++) {
  markerLatLng = new google.maps.LatLng({lat: center[i]['lat'], lng: center[i]['lng']}); // 緯度経度のデータ作成
  marker[i] = new google.maps.Marker({ // マーカーの追加
      position: markerLatLng, // マーカーを立てる位置を指定
      map: map // マーカーを立てる地図を指定
   });
}
}



function codeAddress(){
  // 入力を取得
  let inputAddress = document.getElementById('address').value;

  // geocodingしたあとmapを移動
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
　　　　　　　　　　　　// map.setCenterで地図が移動
      map.setCenter(results[0].geometry.location);

　　　　　　　　　　　　// google.maps.MarkerでGoogleMap上の指定位置にマーカが立つ
      var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
      });
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}
</script>

<script src= <%= ENV['Maps_JavaScript_URL']%> async defer></script>

<div class="center">
  <p>参加ユーザー</p>
  <div class="row">
    <% @group_users.each do |g| %>
    <%= image_tag g.image.to_s, class: "user_thumbnail" %>
    <!-- <p><%= g.name %></p> -->
    <% end %>
  </div>
  <div class="row">
    <% @photos.each do |photo| %>
    <div class="col-xs-4">
    <%= image_tag photo.fish_image.to_s, class: "fish_image" %><br>
    <%= photo.fish_name %><br>
    <%= link_to "詳細", post_image_path(photo.id), class:"btn-sm btn-info" %><br>
    <%= link_to "削除", physical_deleted_path(photo.id), class:"btn-sm btn-danger", method: :post, data: { confirm: '本当に消しますか？' } %>
    </div>
    <% end %>
  </div>
</div>


<%= link_to "大会を終了する", groups_path, class: "btn btn-default col-xs-12" %>